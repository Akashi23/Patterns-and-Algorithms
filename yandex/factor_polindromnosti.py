"""
Аркадий — большой фанат использования машинного обучения в любой задаче. 
Он верит в безграничную силу волшебства этой популярной молодой науки. 
Именно поэтому Аркадий постоянно придумывает всё новые и новые факторы, которые можно вычислить для различных объектов.

Напомним, палиндромом называется строка, 
которая одинаково читается от начала к концу и от конца к началу. 
Для каждой строки в своей базе данных Аркадий хочет найти самую короткую её подстроку, 
состоящую хотя бы из двух символов и являющуюся палиндромом. 
Если таких подстрок несколько, Аркадий хочет выбрать лексикографически минимальную.

Формат ввода
В единственной строке входных данных записана одна строка из базы Аркадия — непустая последовательность строчных букв английского алфавита. Длина строки составляет не менее 
 и не превосходит 
 символов.

Формат вывода
Выведите минимальную по длине подстроку строки из входных данных, 
состоящую хотя бы из двух символов и являющуюся палиндромом. 
Напомним, что среди всех таких строк Аркадий хочет найти лексикографически минимальную.

Пример 1
Ввод	Вывод
abac	aba
Пример 2
Ввод	Вывод
yandex	-1
"""

def solution(s: str):
    min_pol = ''
    for i in range(len(s)):
        for j in range(len(s)):
            if isPolindrom(s[i:j]) and len(s[i:j]) > 1:
                if min_pol == '' or s[i:j] < min_pol:
                    min_pol = s[i:j]

    return -1 if min_pol == '' else min_pol

def isPolindrom(s: str):
    return s == s[::-1]


if __name__ == '__main__':
    s = 'abac'
    print(solution(s))
    assert solution(s) == 'aba'

    s = 'yandex'
    print(solution(s))
    assert solution(s) == -1